// SASS Helper functions

// Fluid Font Size
// https://habrahabr.ru/post/310186/
// helper function, that strips units (12px => 12)
@function strip-unit($number) {
  @if type-of($number) == 'number' and not unitless($number) {
    @return $number / ($number * 0 + 1);
  }

  @return $number;
}

// helper function, that calculates fluid font size
// $f-min - min font size
// $f-max - max font size
// $w-min - min window width
// $w-max - max window width
// $units - measure units (e.x. px, em, rem, vw)
@function calcFluidFontSize($fMin, $fMax, $wMin, $wMax, $units: px) {
  $fMin: strip-unit($fMin);
  $fMax: strip-unit($fMax);
  $wMin: strip-unit($wMin);
  $wMax: strip-unit($wMax);

  $k: ($fMax - $fMin) / ($wMax - $wMin);
  $b: $fMin - $k * $wMin;

  $b: $b + $units;

  @return calc(#{$k} * 100vw + #{$b});
}


@mixin absolute-center {
  margin: auto;
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;

}

// Media Queries Min Width

@mixin min-w($width) {
  @media screen and (min-width: $width) { @content; }
}

// Media Queries Max Width

@mixin max-w($width) {
  @media screen and (max-width: $width) { @content; }
}

// Fluid font size
// $f-min - min font size
// $f-max - max font size
// $w-min - min window width
// $w-max - max window width
// $fallback - default font size for old browsers support
// $units - measure units (e.x. px, em, rem, vw)
@mixin fluid-font($fMin, $fMax, $wMin, $wMax, $fallback: false, $units: px) {

  font-size: $fMin;

  @media (min-width: $wMin) {
    @if ($fallback) {
      font-size: $fallback;
    }
    font-size: calcFluidFontSize($fMin, $fMax, $wMin, $wMax, $units);
  }
  @media (min-width: $wMax) {
    font-size: $fMax;
  }
}

